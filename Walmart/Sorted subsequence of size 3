class Solution{
  public:
    vector<int> find3Numbers(vector<int> arr, int N) {
        stack<int> s;
        vector<int> ans;
        if(N<3)return ans;
        s.push(arr[0]);
        for(int i=1;i<N;i++)
        {
            if(s.top()<arr[i])
                s.push(arr[i]);
            else if(s.size()!=0 && s.top()>arr[i])
            {
                int x=s.top();
                    s.pop();
                if(s.size()==0 || arr[i]>s.top())
                    s.push(arr[i]);
                else s.push(x);
            }
            if(s.size()==3) break; 
        }
        if(s.size()>=3)
        {
            
            for(int i=0;i<3;i++){
                ans.push_back(s.top());
                s.pop();
            }
            reverse(ans.begin(),ans.end());
        }
        return ans;
    }
};


//Method 2
class Solution{
  public:
    vector<int> find3Numbers(vector<int> arr, int N) {
        vector<int> ans;
        if(N<3)return ans;
        int a=INT_MAX;
        int b=INT_MAX;
        int c=INT_MAX;
        int a1=INT_MAX;
        for(int i=0;i<N;i++){
            if(arr[i]<=a)
                a=arr[i];
            else if(arr[i]<=b)
            {    b=arr[i];
                 a1=a;
            }
            else if(arr[i]<c)
            {
                c=arr[i];
                break;
            }
        }
        if(a1!=INT_MAX && b!=INT_MAX && c!=INT_MAX)
        {
            ans.push_back(a1);
            ans.push_back(b);
            ans.push_back(c);
        }
        return ans;
    }
};
