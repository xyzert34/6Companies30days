class Solution {
public:
    int dp[501][501];
    int solve(vector<int> piles,int i,int j){
        if(i>j)return 0;
        if(i==j)return dp[i][j]=piles[i];
        if(dp[i][j]!=-1)return dp[i][j];
        int left=piles[i]+min(solve(piles,i+2,j),solve(piles,i+1,j-1));
        int right=piles[j]+min(solve(piles,i,j-2),solve(piles,i+1,j-1));
        return dp[i][j]= max(left,right);
    }
    bool stoneGame(vector<int>& piles) {
        int n=piles.size();
        int sum=0;
        memset(dp,-1,sizeof(dp));
        int x= solve(piles,0,n-1);
        for(int i=0;i<n;i++)
            sum+=piles[i];
        if(x>sum-x)return true;
        return false;
    }
};
