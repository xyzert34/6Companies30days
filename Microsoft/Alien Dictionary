class Solution{
    public:
    string findOrder(string dict[], int n, int k) {
        vector<int> adj[k];
        for(int i=0;i<n-1;i++)
        {
                int x=min(dict[i].length(),dict[i+1].length());
                for(int j=0;j<x;j++)
                {
                    if(dict[i][j]!=dict[i+1][j])
                    {
                        adj[dict[i][j]-'a'].push_back(dict[i+1][j]-'a');
                        break;
                    }
                }
        }
        //topological sort
        //using bfs
      unordered_map<int,int> m;
	    queue<int> q;
	    string c="";
	    for(int i=0;i<k;i++)
	    {
	        for(auto x:adj[i])
	                m[x]++;
	    }
	    
	    for(int i=0;i<k;i++)
	    {
	        if(m[i]==0 && adj[i].size()!=0)
	            q.push(i);
	    }
	    while(!q.empty())
	    {
	        int t=q.front();
	        c+=(t+'a');
	        q.pop();
	        for(auto x:adj[t])
	        {
	            m[x]--;
	            if(m[x]==0)
	                q.push(x);
	        }
	    }
	    return c;
    }
};
