class Solution {
public:
    long long solve(long long mid,vector<int>& piles)
    {
        long long x=0;
        for(long long i=0;i<piles.size();i++)
            x+=ceil(1.0*piles[i]/mid);
        return x;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        long long sum=0;
        for(long long i=0;i<piles.size();i++)
        {
            sum+=piles[i];
        }
        long long l=1;
        long long r=sum;
        long long mid,ans=INT_MAX;
        while(l<=r)
        {
            mid=(l+r)/2;
            if(solve(mid,piles)<=h)
            {
                ans=min(ans,mid);
                r=mid-1;
            }
            else
                l=mid+1;
        }
        return ans;
    }
};
