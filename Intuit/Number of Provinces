class Solution {
public:
    void dfs(int src,vector<int>&vis,vector<int> adj[])
    {
        vis[src]=1;
        for(auto x:adj[src])
        {
            if(!vis[x])
                dfs(x,vis,adj);
        }
        return;
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int V=isConnected.size();
        int cnt=0;
        vector<int> adj[V];
        for(int i=0;i<V;i++){
            for(int j=0;j<V;j++){
                if(i==j)continue;
                if(isConnected[i][j]==1)
                    adj[i].push_back(j);
            }
        }
        vector<int> vis(V,0);
        for(int i=0;i<V;i++)
        {
            if(!vis[i])
            {
                cnt++;
                dfs(i,vis,adj);
            }
        }
        return cnt;
    }
};
