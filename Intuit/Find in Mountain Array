/**
 * // This is the MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * class MountainArray {
 *   public:
 *     int get(int index);
 *     int length();
 * };
 */

class Solution {
public:
    int findInMountainArray(int target, MountainArray &mountainArr) {
        int l=1;
        int r=mountainArr.length()-2;
        int mid,ans;
        while(l<=r)
        {
            mid=(l+r)/2;
            int a = mountainArr.get(mid);
            int b = mountainArr.get(mid-1);
            int c = mountainArr.get(mid+1);
            if(a>b && a>c){
                ans=mid;
                break;
            }
            else if(a>b && a<c)
                l=mid+1;
            else if(a<b && a >c)
                r=mid-1;
        }
        cout<<ans;
        int flag=0;
        l=0,r=ans;
        while(l<=r)
        {
            mid=(l+r)/2;
            int a = mountainArr.get(mid);
            if(a==target)
            {
                flag=1;
                break;
            }
            else if(a>target)
                r=mid-1;
            else
                l=mid+1;
        }
        if(flag==1)
            return mid;
        l=ans+1,r=mountainArr.length()-1,flag=0;
        while(l<=r)
        {
            mid=(l+r)/2;
            int a = mountainArr.get(mid);
            if(a==target)
            {
                flag=1;
                break;
            }
            else if(a<target)
                r=mid-1;
            else 
                l=mid+1;
        }
        if(flag==1)
            return mid;
        return -1;
    }
};
